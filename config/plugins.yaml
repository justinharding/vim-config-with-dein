---
# PLUGINS
# ==========================================

# Startup
# -------
- repo: Shougo/dein.vim
- repo: rafi/awesome-vim-colorschemes
- repo: rafi/vim-badge
- repo: itchyny/vim-parenmatch

# Lazy Loading
# ==========================================

# Languages
# ---------
- { repo: vim-python/python-syntax, on_ft: python }
- { repo: Vimjas/vim-python-pep8-indent, on_ft: python }
- { repo: vim-scripts/python_match.vim, on_ft: python }

- repo: plasticboy/vim-markdown
  on_ft: markdown
  hook_add: |
    let g:vim_markdown_override_foldtext = 0
    let g:vim_markdown_initial_foldlevel = 999
    let g:vim_markdown_new_list_item_indent = 2
    let g:vim_markdown_frontmatter = 1
    let g:vim_markdown_conceal = 0
    let g:vim_markdown_fenced_languages = [
      \ 'c++=cpp',
      \ 'viml=vim',
      \ 'bash=sh',
      \ 'ini=dosini'
      \ ]

# ==========================================
# Commands
# --------
- repo: scrooloose/nerdtree
  depends: nerdtree-git-plugin
  on_map: { n: <Plug> }
  hook_post_source: source $VIMPATH/config/plugins/nerdtree.vim

- { repo: Xuyuanp/nerdtree-git-plugin, on_source: nerdtree }

- repo: easymotion/vim-easymotion
  on_map: { n: <Plug> }
  hook_source: |
    let g:EasyMotion_do_mapping = 0
    let g:EasyMotion_prompt = 'Jump to â†’ '
    let g:EasyMotion_keys = 'fjdksweoavn'
    let g:EasyMotion_smartcase = 1
    let g:EasyMotion_use_smartsign_us = 1

- { repo: tpope/vim-commentary, on_map: <Plug>Commentary }

# ==========================================
# Completion
# ----------
- repo: Shougo/deoplete.nvim
  depends: context_filetype.vim
  if: has('nvim') && empty($VIM_MINIMAL)
  on_i: 1
  hook_add: let g:deoplete#enable_at_startup = 1
  hook_source: source $VIMPATH/config/plugins/deoplete.vim

- { repo: Shougo/context_filetype.vim, lazy: 1, if: empty($VIM_MINIMAL) }

- repo: Shougo/neosnippet.vim
  depends: [ neosnippet-snippets, context_filetype.vim ]
  if: empty($VIM_MINIMAL)
  on_event: InsertCharPre
  on_ft: snippet
  hook_add: let g:neosnippet#data_directory = $VARPATH.'/snippets'
  hook_source: |
    let g:neosnippet#enable_snipmate_compatibility = 1
    let g:neosnippet#enable_completed_snippet = 1
    let g:neosnippet#expand_word_boundary = 1
    autocmd MyAutoCmd InsertLeave * NeoSnippetClearMarkers

- repo: Raimondi/delimitMate
  on_i: 1
  hook_source: |
    let g:delimitMate_expand_cr = 1
    let g:delimitMate_excluded_ft = 'html'

- { repo: Shougo/neosnippet-snippets, if: empty($VIM_MINIMAL) }

# ==========================================
# Denite
# ------
- repo: Shougo/denite.nvim
  on_cmd: Denite
  # hook_post_source: source $VIMPATH/config/plugins/denite.vim
  hook_source: source $VIMPATH/config/plugins/denite.vim

# - { repo: chemzqm/unite-location, on_source: denite.nvim }
# - { repo: chemzqm/denite-git, on_source: denite.nvim }
# - { repo: rafi/vim-denite-z, on_source: denite.nvim }
# - { repo: rafi/vim-denite-session, on_source: denite.nvim }

- repo: mileszs/ack.vim

# - repo: ledger/vim-ledger
